#Parameterized builds
pipeline {
    agent any
    stages {
        stage('Parameters') {
            steps {
                script {
                   // properties([parameters([choice(choices: ['TESTING', 'STAGING', 'PRODUCTION'], description: 'echo "Will deploy to ${params.DEPLOY_ENV}"', name: 'DEPLOY_ENV')])])
                   // echo "Output is ${params.DEPLOY_ENV}"
                   
                   //  properties([parameters([string(defaultValue: 'Linux', description: 'To define Different Platform', name: 'Platform', trim: true)])])
                   //  echo "output: ${params.Platform}"
                   
                   //properties([parameters([choice(choices: ['Windows', 'Linux', 'Mac'], description: 'To define Different Platform', name: 'Platform'), choice(choices: ['A', 'B', 'C', 'D'], description: 'Select Folder', name: 'Folder')])])
                   // echo "output1: ${params.Platform}"
                    //echo "output2: ${params.Folder}"
               }
            }
        }
    }
}

//Another Exmple
// Install Active Choice Plugin

/*properties([parameters([[$class: 'ChoiceParameter', choiceType: 'PT_SINGLE_SELECT', description: '', filterLength: 1, filterable: false, name: 'States', randomName: 'choice-parameter-3136092508555600', script: [$class: 'GroovyScript', fallbackScript: [classpath: [], sandbox: false, script: 'return[\'Select State\']'], script: [classpath: [], sandbox: false, script: '''return [
    \'Sao Paulo\',
    \'Rio de Janeiro\',
    \'Parana\',
    \'Acre\'
]''']]], [$class: 'CascadeChoiceParameter', choiceType: 'PT_CHECKBOX', description: '', filterLength: 1, filterable: false, name: 'Cities', randomName: 'choice-parameter-3136092511928677', referencedParameters: 'States', script: [$class: 'GroovyScript', fallbackScript: [classpath: [], sandbox: false, script: 'return[\'Select City\']'], script: [classpath: [], sandbox: false, script: '''if (States == "Sao Paulo") {
  return ["Barretos", "Sao Paulo", "Itu"]
} else if (States == "Rio de Janeiro") {
  return ["Rio de Janeiro", "Mangaratiba"]
} else if (States == "Parana") {
  return ["Curitiba", "Ponta Grossa"]
} else if (States == "Acre") {
  return ["Rio Branco", "Acrelandia"]
} else {
  return ["Unknown state"]
}''']]]])])
        
pipeline {
  agent any
  stages {
    stage('Build') {
      steps {
        
        
        echo "${params.States}"
        echo "${params.Cities}"
      }
    }
  }
}*/
